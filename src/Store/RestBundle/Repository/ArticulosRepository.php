<?php

namespace Store\RestBundle\Repository;
use Doctrine\ORM\EntityManager;
use Store\RestBundle\Entity\Articulos;

/**
 * ArticulosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticulosRepository extends RestBaseRepository
{

    private function getPrecios($entity)
    {

        $em = $this->getEntityManager()->getRepository('StoreRestBundle:PreciosEspeciales')->setData($this->data)->getByProduct($entity->getId(),$entity);
        $t = $this->getEntityManager()->getRepository('StoreRestBundle:TiposIva')->find($entity->getIdTipoIVA());
        $entity->setTipoIvaObject($t);
       /* foreach($p->getPreciosEspeciales() as $t) {
            if ($t->getRegaloObject() != null) if ($t->getRegaloObject()->idArticulo!=null) {
                $id= $t->getRegaloObject()->idArticulo;

                $a = $res->getRepository('StoreRestBundle:Articulos')->find($id);
                if ($a != null) {
                    $t->setArticuloRegaloObject($a);
                    $w = $em->getRepository('StoreStoreBundle:Producto')->findBy(array('idproducto' => $a->getId()));
                    if (count($w) > 0)
                        $a->setProducto($w[0]);
                }

            }
        }*/
    }
    public function findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
    {
        $t = parent::findBy($criteria, $orderBy, $limit, $offset);
        foreach($t as $t1)
            $this->getPrecios($t1);
        return $t;
    }
    public function find($id)
    {
        $t = parent::find($id);
        if($t!=null)
            $this->getPrecios($t);
        return $t;
    }
    public function findAll()
    {

        $t = parent::findAll();
        foreach($t as $t1)
            $this->getPrecios($t1);
        return $t;

    }
}
